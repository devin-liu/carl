const DB = require('../datafeed/Database/index.js');

const ExchangeWorld = require('./ExchangeWorld.js');
const QLearner = require('./q-learner.js');


const world = new ExchangeWorld(5, 'BTC', 500, {});
const agent = new QLearner(world);


function getNextState() {
  // this.currentState = []
  // const exampleStates = [
  //   new State('0000011111', [0,0,0,0,0], [1,1,1,1,1]),
  //   new State('0000111111', [0,0,0,0,1], [1,1,1,1,1]),
  //   new State('0001111111', [0,0,0,1,1], [1,1,1,1,1]),
  //   new State('0000000111', [0,0,0,0,0], [0,0,1,1,1]),
  //   new State('0000001111', [0,0,0,0,0], [0,1,1,1,1]),
  //   new State('0000000000', [0,0,0,0,0], [0,0,0,0,0]),
  // ]
  // "bids": [
  //       [ price, size, num-orders ],
  //   ],
  //   "asks": [
  //       [ price, size, num-orders ],
  //   ]
  return {"asks": [["6860.01", "7.46729809", 15], ["6862.96", "1", 1], ["6864", "2", 1], ["6864.99", "5", 2], ["6865", "2.5", 1], ["6865.01", "7.23259518", 5], ["6871.31", "0.015", 1], ["6871.33", "0.05", 1], ["6871.53", "2", 1], ["6872.55", "1.564", 1], ["6874.62", "0.661012", 1], ["6875", "0.015", 1], ["6876.08", "0.01", 1], ["6884.23", "0.00459562", 1], ["6885", "0.015", 1], ["6885.44", "1", 1], ["6885.45", "5.025", 2], ["6886.05", "0.00232848", 1], ["6886.27", "0.001", 1], ["6886.28", "0.00177731", 1], ["6886.81", "0.4066", 1], ["6887.06", "0.00240109", 1], ["6887.25", "0.25", 1], ["6888", "0.02", 1], ["6888.46", "0.216", 1], ["6888.9", "0.0281923", 2], ["6889.99", "0.001", 1], ["6890", "1.45010325", 5], ["6890.77", "0.00237742", 1], ["6890.88", "1.0559563", 3], ["6892", "0.055", 2], ["6892.44", "5", 1], ["6892.45", "1.25020803", 1], ["6892.62", "0.00237838", 1], ["6893.79", "0.001", 1], ["6893.8", "0.23371", 1], ["6895", "0.008", 1], ["6895.16", "0.02874138", 1], ["6896.51", "0.001", 1], ["6896.52", "0.01741779", 2], ["6897", "0.11", 2], ["6897.39", "1.015", 1], ["6899", "1.15", 4], ["6899.91", "0.0037", 1], ["6899.98", "0.001", 1], ["6900", "4.38127723", 19], ["6900.95", "0.195", 1], ["6901.15", "0.91742", 1], ["6901.19", "2.208", 1], ["6903.52", "0.001", 1]], "bids": [["6860", "0.0018", 1], ["6859", "0.13048549", 1], ["6856.45", "0.00544956", 1], ["6855", "0.015", 1], ["6853.84", "0.25", 1], ["6853.81", "0.5", 1], ["6853.8", "0.001004", 1], ["6853.14", "1.335", 1], ["6853.01", "0.012", 1], ["6850.77", "0.51359289", 1], ["6850.01", "0.016004", 2], ["6850", "0.015", 1], ["6849.99", "0.1024819", 1], ["6846.33", "0.984", 1], ["6846.32", "2.098", 2], ["6846.31", "1", 1], ["6845.01", "0.002008", 2], ["6845", "0.013", 1], ["6844.52", "0.9", 1], ["6844.51", "1.028", 1], ["6843.89", "5.02597947", 5], ["6842.85", "0.9", 1], ["6840.78", "0.9", 1], ["6840.01", "0.001004", 1], ["6840", "3.74937457", 5], ["6839.66", "9.6874", 1], ["6839.41", "0.9", 1], ["6838", "2", 1], ["6837.69", "0.001004", 1], ["6837.06", "0.29179208", 1], ["6835.03", "0.5174", 1], ["6835", "0.015", 1], ["6834.01", "0.001004", 1], ["6833.25", "0.0037", 1], ["6831.16", "0.001004", 1], ["6831.14", "1.596", 1], ["6830", "0.015", 1], ["6828.02", "1.583", 1], ["6825.01", "0.001004", 1], ["6825", "0.015", 1], ["6823.95", "0.001004", 1], ["6823.94", "0.00438272", 1], ["6822.65", "2", 1], ["6820.49", "1.095", 1], ["6820.48", "18.0496", 1], ["6820.01", "0.001004", 1], ["6820", "0.0172", 2], ["6817.99", "5", 1], ["6817.77", "0.001", 1], ["6817.67", "0.00180279", 1]], "sequence": 5542136547}
  // return new State('0000011111', [0,0,0,0,0], [1,1,1,1,1]);
  // return exampleStates[this.pickRandomNumber(exampleStates.length)];
}


function stepAgentForward(orderBook) {
  agent.currentState = getNextState();
  const { marketBids, marketAsks, stateId } = world.parseOrderBook(orderBook);
  agent.setOrderBook({ marketAsks, marketBids });

}


function getBatch(items, page, pair_string) {
  // console.log(`select * from orderbook limit ${items} offset ${page*items} where 'pair_string' is '${pair_string}';`)
  DB.query(`select * from orderbook where pair_string LIKE '${pair_string}' limit ${items} offset ${items*page};`, (a, b, c) => {
    // console.log(a)
    // console.log(c)
    console.log(b.rows)
  })
}

function train(steps=10000) {

  world.policy = agent.policy();
  // print profit


  // Initialize S: Pick a random starting state.

  // this._sequence = [];
  stepAgentForward();
  // Take steps until you reach the goal.
  while (steps--) {
    stepAgentForward();
  }
  console.log(this.Q)


  // console.log()
  console.log(`profit: ${world.calculateProfit()}`)
}


function reset() {
  world.reset();
  agent.reset();
}


// world.start()
// train(10);
getBatch(5, 0, 'ETH-USD');


